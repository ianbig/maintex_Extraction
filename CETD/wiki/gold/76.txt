
Internet Protocol Suite
  (Redirected from TCP/IP)

It has been suggested that this article or section be merged with TCP/IP model. (Discuss)
Internet Protocol Suite
Application Layer
BGP · DHCP · DNS · FTP · HTTP · IMAP · IRC · LDAP · MGCP · NNTP · NTP · POP · RIP · RPC · RTP · SIP · SMTP · SNMP · SSH · Telnet · TLS/SSL · XMPP ·
(more)
Transport Layer
TCP · UDP · DCCP · SCTP · RSVP · ECN ·
(more)
Internet Layer
IP (IPv4, IPv6) · ICMP · ICMPv6 · IGMP · IPsec ·
(more)
Link Layer
ARP/InARP · NDP · OSPF · Tunnels (L2TP) · PPP · Media Access Control (Ethernet, DSL, ISDN, FDDI) · (more)
v • d • e
The Internet Protocol Suite is the set of communications protocols used for the Internet and other similar networks. It is commonly also known as TCP/IP, named from two of the most important protocols in it: the Transmission Control Protocol (TCP) and the Internet Protocol (IP), which were the first two networking protocols defined in this standard. Modern IP networking represents a synthesis of several developments that began to evolve in the 1960s and 1970s, namely the Internet and local area networks, which emerged during the 1980s, together with the advent of the World Wide Web in the early 1990s.
The Internet Protocol Suite, like many protocol suites, is constructed as a set of layers. Each layer solves a set of problems involving the transmission of data. In particular, the layers define the operational scope of the protocols within.
Often a component of a layer provides a well-defined service to the upper layer protocols and may be using services from the lower layers. Upper layers are logically closer to the user and deal with more abstract data, relying on lower layer protocols to translate data into forms that can eventually be physically transmitted.
The TCP/IP model consists of 4 layers (RFC 1122)[1][2]. From lowest to highest, these are the Link Layer, the Internet Layer, the Transport Layer, and the Application Layer.
Contents [hide]
1 History
2 Layers in the Internet Protocol Suite
2.1 The concept of layers
2.2 Layer names and number of layers in the literature
3 Implementations
4 See also
5 References
6 Further reading
7 External links
[edit]History

The Internet Protocol Suite resulted from research and development conducted by the Defense Advanced Research Projects Agency (DARPA) in the early 1970s. After initiating the pioneering ARPANET in 1969, DARPA started work on a number of other data transmission technologies. In 1972, Robert E. Kahn joined the DARPA Information Processing Technology Office, where he worked on both satellite packet networks and ground-based radio packet networks, and recognized the value of being able to communicate across both. In the spring of 1973, Vinton Cerf, the developer of the existing ARPANET Network Control Program (NCP) protocol, joined Kahn to work on open-architecture interconnection models with the goal of designing the next protocol generation for the ARPANET.
By the summer of 1973, Kahn and Cerf had worked out a fundamental reformulation, where the differences between network protocols were hidden by using a common internetwork protocol, and, instead of the network being responsible for reliability, as in the ARPANET, the hosts became responsible. Cerf credits Hubert Zimmerman and Louis Pouzin, designer of the CYCLADES network, with important influences on this design.
The design of the network included the recognition that it should provide only the functions of efficiently transmitting and routing traffic between end nodes and that all other intelligence should be located at the edge of the network, in the end nodes. Using a simple design, it became possible to connect almost any network to the ARPANET, irrespective of their local characteristics, thereby solving Kahn's initial problem. One popular expression is that TCP/IP, the eventual product of Cerf and Kahn's work, will run over "two tin cans and a string."
A computer called a router (a name changed from gateway to avoid confusion with other types of gateways) is provided with an interface to each network, and forwards packets back and forth between them. Requirements for routers are defined in (Request for Comments 1812).[3]
The idea was worked out in more detailed form by Cerf's networking research group at Stanford in the 1973–74 period, resulting in the first TCP specification.(Request for Comments 675) [4] (The early networking work at Xerox PARC, which produced the PARC Universal Packet protocol suite, much of which existed around the same period of time, was also a significant technical influence; people moved between the two.)
DARPA then contracted with BBN Technologies, Stanford University, and the University College London to develop operational versions of the protocol on different hardware platforms. Four versions were developed: TCP v1, TCP v2, a split into TCP v3 and IP v3 in the spring of 1978, and then stability with TCP/IP v4 — the standard protocol still in use on the Internet today.
In 1975, a two-network TCP/IP communications test was performed between Stanford and University College London (UCL). In November, 1977, a three-network TCP/IP test was conducted between sites in the US, UK, and Norway. Several other TCP/IP prototypes were developed at multiple research centres between 1978 and 1983. The migration of the ARPANET to TCP/IP was officially completed on flag day January 1, 1983, when the new protocols were permanently activated.[5]
In March 1982, the US Department of Defense declared TCP/IP as the standard for all military computer networking.[6] In 1985, the Internet Architecture Board held a three day workshop on TCP/IP for the computer industry, attended by 250 vendor representatives, promoting the protocol and leading to its increasing commercial use.
[edit]Layers in the Internet Protocol Suite

[edit]The concept of layers
The TCP/IP suite uses encapsulation to provide abstraction of protocols and services. Such encapsulation usually is aligned with the division of the protocol suite into layers of general functionality. In general, an application (the highest level of the model) uses a set of protocols to send its data down the layers, being further encapsulated at each level.
This may be illustrated by an example network scenario, in which two Internet host computers communicate across local network boundaries constituted by their internetworking gateways (routers).


TCP/IP stack operating on two hosts connected via two routers and the corresponding layers used at each hop


Encapsulation of application data descending through the protocol stack.
The functional groups of protocols and methods are the Application Layer, the Transport Layer, the Internet Layer, and the Link Layer (RFC 1122). This model was not intended to be a rigid reference model into which new protocols have to fit in order to be accepted as a standard.
The following table provides some examples of the protocols grouped in their respective layers.
Application	DNS, TFTP, TLS/SSL, FTP, Gopher, HTTP, IMAP, IRC, NNTP, POP3, SIP, SMTP, SMPP, SNMP, SSH, Telnet, Echo, RTP, PNRP, rlogin, ENRP
Routing protocols like BGP and RIP which run over TCP/UDP, may also be considered part of the Internet Layer.
Transport	TCP, UDP, DCCP, SCTP, IL, RUDP, RSVP
Internet	IP (IPv4, IPv6), ICMP, IGMP, and ICMPv6
OSPF for IPv4 was initially considered IP layer protocol since it runs per IP-subnet, but has been placed on the Link since RFC 2740.
Link	ARP, RARP, OSPF (IPv4/IPv6), IS-IS, NDP
[edit]Layer names and number of layers in the literature
The following table shows the layer names and the number of layers of networking models presented in RFCs and textbooks in widespread use in today's university computer networking courses.
RFC 1122 [7]	Tanenbaum	Cisco Academy[8]	Kurose[9] Forouzan [10]	Comer[11] Kozierok[12]	Stallings[13]	Arpanet Reference Model 1982 (RFC 871)
Four layers [14]	Four layers [15]	Four layers	Five layers	Four+one layers	Five layers	Three layers
"Internet model"[citation needed]	"TCP/IP reference model"[16]	"Internet model"	"Five-layer Internet model" or "TCP/IP protocol suite"	"TCP/IP 5-layer reference model"	"TCP/IP model"	"Arpanet reference model"
Application [14][17]	Application	Application	Application	Application	Application	Application/Process
Transport [14]	Transport	Transport	Transport	Transport	Host-to-host or transport	Host-to-host
Internet [14]	Internet	Internetwork	Network	Internet	Internet
Link [14]	Host-to-network	Network interface	Data link	Data link (Network interface)	Network access	Network interface
Physical	(Hardware)	Physical	
These textbooks are secondary sources that may contravene the intent of RFC 1122 and other IETF primary sources.[18]
Different authors have interpreted the RFCs differently regarding the question whether the Link Layer (and the TCP/IP model) covers Physical Layer issues, or if a hardware layer is assumed below the Link Layer. Some authors have tried to use other names for the Link Layer, such as network interface layer, in view to avoid confusion with the Data Link Layer of the seven layer OSI model. Others have attempted to map the Internet Protocol model onto the OSI Model. The mapping often results in a model with five layers where the Link Layer is split into a Data Link Layer on top of a Physical Layer. In literature with a bottom-up approach to Internet communication,[10][11][13] in which hardware issues are emphasized, those are often discussed in terms of Physical Layer and Data Link Layer.
The Internet Layer is usually directly mapped into the OSI Model's Network Layer, a more general concept of network functionality. The Transport Layer of the TCP/IP model, sometimes also described as the host-to-host layer, is mapped to OSI Layer 4 (Transport Layer), sometimes also including aspects of OSI Layer 5 (Session Layer) functionality. OSI's Application Layer, Presentation Layer, and the remaining functionality of the Session Layer are collapsed into TCP/IP's Application Layer. The argument is that these OSI layers do usually not exist as separate processes and protocols in Internet applications.[citation needed]
However, the Internet protocol stack has never been altered by the Internet Engineering Task Force from the four layers defined in RFC 1122. The IETF makes no effort to follow the OSI model although RFCs sometimes refer to it. The IETF has repeatedly stated[citation needed] that Internet protocol and architecture development is not intended to be OSI-compliant.
RFC 3439, addressing Internet architecture, contains a section entitled: "Layering Considered Harmful".[18]
[edit]Implementations

Most computer operating systems in use today, including all consumer-targeted systems, include a TCP/IP implementation.
Minimally acceptable implementation includes implementation for (from most essential to the less essential) IP, ARP, ICMP, UDP, TCP and sometime IGMP. It is in principle possible to support only one of transport protocols (i.e. simple UDP), but it is rarely done, as it limits usage of the whole implementation. IPv6, beyond own version of ARP (NBP), and ICMP (ICMPv6), and IGMP (IGMPv6) have some additional required functionalities, and often is accompanied with integrated IPSec security layer. Other protocols could be easily added later (often they can be implemented entirely in the userspace), for example DNS for resolving domain names to IP addresses or DHCP client for automatic configuration of network interfaces.
Most of the IP implementations are accessible to the programmers using socket abstraction (usable also with other protocols) and proper API for most of the operations. This interface is known as BSD sockets and was used initially in C.
Unique implementations include Lightweight TCP/IP, an open source stack designed for embedded systems and KA9Q NOS, a stack and associated protocols for amateur packet radio systems and personal computers connected via serial lines.
[edit]See also

	Computer Science portal
List of network protocols
List of automation protocols
List of TCP and UDP port numbers
FLIP (Fast-Local-Internet-Protocol) another stack
List of information technology acronyms
[edit]References

^ RFC 1122, Requirements for Internet Hosts -- Communication Layers, R. Braden (ed.), October 1989
^ RFC 1123, Requirements for Internet Hosts -- Application and Support, R. Braden (ed.), October 1989
^ Baker, Fred, ed (June 1995). Requirements for IP Version 4 Routers. Internet Engineering Task Force, Network Working Group. Request for Comments 1812. http://tools.ietf.org/html/rfc1812. Retrieved 2009-09-22
^ V.Cerf et al. (December 1974). "Specification of Internet Transmission Control Protocol". http://www.ietf.org/rfc/rfc0675.txt.
^ Internet History
^ Ronda Hauben. "From the ARPANET to the Internet". TCP Digest (UUCP). http://www.columbia.edu/~rh120/other/tcpdigest_paper.txt. Retrieved 2007-07-05.
^ IETF, RFC 1122, p.7, "To communicate using the Internet system, a host must implement the layered set of protocols comprising the Internet protocol suite. A host typically must implement at least one protocol from each layer."
^ Mark Dye, Mark A. Dye, Wendell, Network Fundamentals: CCNA Exploration Companion Guide, 2007, ISBN 1-58713-208-7
^ James F. Kurose, Keith W. Ross, Computer Networking: A Top-Down Approach, 2008, ISBN 0-321-49770-8
^ a b Behrouz A. Forouzan, Data Communications and Networking
^ a b Douglas E. Comer, Internetworking with TCP/IP: Principles, Protocols and Architecture, Pearson Prentice Hall 2005, ISBN 0-13-187671-6
^ Charles M. Kozierok, "The TCP/IP Guide", No Starch Press 2005
^ a b William Stallings, Data and Computer Communications, Prentice Hall 2006, ISBN 0-13-243310-9
^ a b c d e IETF, RFC 1122, p.7-8, "The protocol layers [...] are as follows [...]:[...] Application Layer [...] Transport Layer [...] Internet Layer [...] Link Layer"
^ Andrew Tanenbaum, Computer Networks, section 1.4.3, "[...] the OSI model has seven layers and the TCP/IP has four layers."
^ Tanenbaum, Andrew S. (2002). Computer Networks. Prentice Hall. p. 41. ISBN 0130661023. "1.4.2 The TCP/IP Reference Model" Excerpt at Google Books
^ IETF, RFC 1122, p.8, "The application layer is the top layer of the Internet protocol suite."
^ a b R. Bush; D. Meyer (December 2002). Some Internet Architectural Guidelines and Philosophy. Internet Engineering Task Force. http://www.isi.edu/in-notes/rfc3439.txt. Retrieved 2007-11-20
[edit]Further reading

Douglas E. Comer. Internetworking with TCP/IP - Principles, Protocols and Architecture. ISBN 86-7991-142-9
Joseph G. Davies and Thomas F. Lee. Microsoft Windows Server 2003 TCP/IP Protocols and Services. ISBN 0-7356-1291-9
Forouzan, Behrouz A. (2003). TCP/IP Protocol Suite (2nd ed.). McGraw-Hill. ISBN 0-07-246060-1.
Craig Hunt TCP/IP Network Administration. O'Reilly (1998) ISBN 1-56592-322-7
Maufer, Thomas A. (1999). IP Fundamentals. Prentice Hall. ISBN 0-13-975483-0.
Ian McLean. Windows(R) 2000 TCP/IP Black Book. ISBN 1-57610-687-X
Ajit Mungale Pro .NET 1.1 Network Programming. ISBN 1-59059-345-6
W. Richard Stevens. TCP/IP Illustrated, Volume 1: The Protocols. ISBN 0-201-63346-9
W. Richard Stevens and Gary R. Wright. TCP/IP Illustrated, Volume 2: The Implementation. ISBN 0-201-63354-X
W. Richard Stevens. TCP/IP Illustrated, Volume 3: TCP for Transactions, HTTP, NNTP, and the UNIX Domain Protocols. ISBN 0-201-63495-3
Andrew S. Tanenbaum. Computer Networks. ISBN 0-13-066102-3
David D. Clark, "The Design Philosophy of the DARPA Internet Protocols", Computer Communications Review 18:4, August 1988, pp. 106–114
[edit]External links

Internet History -- Pages on Robert Kahn, Vinton Cerf, and TCP/IP (reviewed by Cerf and Kahn).
RFC 675 - Specification of Internet Transmission Control Program, December 1974 Version
TCP/IP State Transition Diagram (PDF)
RFC 1180 A TCP/IP Tutorial - from the Internet Engineering Task Force (January 1991)
TCP/IP FAQ
TCP/IP Resources List
The TCP/IP Guide - A comprehensive look at the protocols and the procedures/processes involved
A Study of the ARPANET TCP/IP Digest
TCP/IP Sequence Diagrams
The Internet in Practice
TCP/IP - Directory & Informational Resource
Daryl's TCP/IP Primer - Intro to TCP/IP LAN administration, conversational style
Introduction to TCP/IP
TCP/IP commands from command prompt
cIPS — Robust TCP/IP stack for embedded devices without an Operating System
TCP Server Client Program using Python
Categories: Internet protocols | TCP/IP | History of the Internet
