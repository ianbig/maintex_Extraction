<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en">

<head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

<title>Some comments on Noiselets &laquo; Le Petit Chercheur Illustré</title>

<link rel="stylesheet" href="http://s0.wp.com/wp-content/themes/default/style.css?m=1293559685g&amp;3" type="text/css" media="screen" />
<!--[if lte IE 8]><link rel="stylesheet" href="http://s0.wp.com/wp-content/themes/default/ie.css?m=1273203575g" type="text/css" media="screen" /><![endif]-->
<link rel="pingback" href="http://yetaspblog.wordpress.com/xmlrpc.php" />

<link rel="alternate" type="application/rss+xml" title="Le Petit Chercheur Illustré &raquo; Feed" href="http://yetaspblog.wordpress.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Le Petit Chercheur Illustré &raquo; Comments Feed" href="http://yetaspblog.wordpress.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Le Petit Chercheur Illustré &raquo; Some comments on&nbsp;Noiselets Comments Feed" href="http://yetaspblog.wordpress.com/2010/08/21/some-comments-on-noiselets/feed/" />
<script type="text/javascript">
/* <![CDATA[ */
function addLoadEvent(func){var oldonload=window.onload;if(typeof window.onload!='function'){window.onload=func;}else{window.onload=function(){oldonload();func();}}}
/* ]]> */
</script>
<link rel="stylesheet" href="http://s0.wp.com/wp-content/themes/h4/global.css?m=1291749258g" type="text/css" />
<script type='text/javascript' src='http://s2.wp.com/wp-includes/js/l10n.js?m=1290133841g&amp;ver=20101110'></script>
<script type='text/javascript' src='http://s1.wp.com/wp-includes/js/jquery/jquery.js?m=1290133841g&amp;ver=1.4.4'></script>
<script type='text/javascript' src='http://s0.wp.com/wp-includes/js/comment-reply.js?m=1231878779g&amp;ver=20090102'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://yetaspblog.wordpress.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://yetaspblog.wordpress.com/wp-includes/wlwmanifest.xml" /> 
<link rel='index' title='Le Petit Chercheur Illustré' href='http://yetaspblog.wordpress.com/' />
<link rel='prev' title='New class of RIP matrices&nbsp;?' href='http://yetaspblog.wordpress.com/2010/05/18/new-class-of-rip-matrices/' />
<meta name="generator" content="WordPress.com" />
<link rel='canonical' href='http://yetaspblog.wordpress.com/2010/08/21/some-comments-on-noiselets/' />
<link rel='shortlink' href='http://wp.me/pfv70-1y' />
<link rel="shortcut icon" type="image/x-icon" href="http://s1.wp.com/i/favicon-stacked.ico?m=1284002170g" sizes="16x16 24x24 32x32 48x48" />
<link rel="icon" type="image/x-icon" href="http://s1.wp.com/i/favicon-stacked.ico?m=1284002170g" sizes="16x16 24x24 32x32 48x48" />
<link rel="apple-touch-icon" href="http://s0.wp.com/wp-content/themes/h4/i/webclip.png?m=1250548519g" />
	<style type="text/css">
	/* <![CDATA[ */
				div#likes { margin-top: 15px; }
		.like-button { border: 1px solid #eee; padding: 2px 6px; font-size: 13px; font-family: arial, tahoma, sans-serif; }
		#wpl-likebox { clear: left; font-size: 11px; font-family: arial, tahoma, verdana, sans-serif !important; min-height: 30px; margin: 10px 0 !important; padding: 5px 0 10px 0 !important; }
		#wpl-button { float: left; background: url( /i/buttonbg.png ) top left repeat-x; margin-right: 7px; border: 1px solid #d4d4d4; -moz-border-radius: 3px; -webkit-border-radius: 3px; border-radius: 3px; }
		#wpl-button a { color: #666 !important; line-height: 130% !important; text-decoration: none !important; outline: none; float: left; padding: 3px 6px 2px 24px !important; font-size: 11px !important; background: url( /i/likestar.png ) 6px 49.8% no-repeat; }
		#wpl-button.liked { background: #feffce; border: 1px solid #f3e389; }
		#wpl-button.liked a { color: #ba871b !important; }
		#wpl-likebox #wpl-count { min-height: 25px; line-height: 130% !important; float: left; padding-top: 4px; }
		#wpl-likebox #wpl-avatars { clear: left; max-height: 98px; overflow: hidden; margin-top: 15px; line-height: 130% !important; }
		#wpl-likebox #wpl-avatars img { border: none !important; }
		#wpl-likebox #wpl-mustlogin { line-height: 14px !important; font-size: 11px; clear: left; margin-top: 5px; background: #f0f0f0; padding: 10px; width: 65%; -moz-border-radius: 3px; -webkit-border-radius: 3px; border-radius: 3px; }
		#wpl-likebox #wpl-mustlogin a { color: #888; text-decoration: underline; }
		#wpl-likebox #wpl-mustlogin p { margin: 5px 0; padding: 0 }
		#wpl-likebox #wpl-mustlogin input.input { padding: 2px; background: #fff; font-size: 11px; font-family: inherit; border: 1px solid #ccc; -moz-box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1) inset; -webkit-box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1) inset; line-height: 12px; }
		#wpl-likebox #wpl-mustlogin input#wp-submit { border: 1px solid #ccc; font-size: 11px; background: #fafafa; repeat-x; -moz-border-radius: 3px; -webkit-border-radius: 3px; border-radius: 3px; padding: 2px 4px !important; line-height: 12px; }
		#wpl-likebox #wpl-mustlogin label { position: relative; cursor: text; }
		#wpl-likebox #wpl-mustlogin label span { position: absolute; top: 0px; left: 5px; padding: 0 !important; }
		#wpl-likebox #wpl-mustlogin label span { top /*\**/: -10px\9; }
	/* ]]> */
	</style>
	<link rel='openid.server' href='http://yetaspblog.wordpress.com/?openidserver=1' />
<link rel='openid.delegate' href='http://yetaspblog.wordpress.com/' />
<link rel="search" type="application/opensearchdescription+xml" href="http://yetaspblog.wordpress.com/osd.xml" title="Le Petit Chercheur Illustré" />
<link rel="search" type="application/opensearchdescription+xml" href="http://wordpress.com/opensearch.xml" title="WordPress.com" />
<style type="text/css">
#header     { margin: 0 !important; margin: 0 0 0 1px; padding: 1px; height: 198px; width: 758px; }
#headerimg  { margin: 7px 9px 0; height: 192px; width: 740px; }
#headerimg { background: url(http://yetaspblog.files.wordpress.com/2008/05/cropped-00017-2.jpg) no-repeat top;}
#header h1 a, #header h1 a:hover, #header .description {
	color: #ffffff;
}
</style>
<style type='text/css'><!--
body { background: url("http://s0.wp.com/wp-content/themes/default/images/kubrickbgcolor.gif?m=1273203575g"); }
#page { background: url("http://s0.wp.com/wp-content/themes/default/images/kubrickbgwide.gif?m=1273203575g") repeat-y top !important; border: none; }
#header { background: url("http://s0.wp.com/wp-content/themes/default/images/kubrickheader.gif?m=1273203575g") no-repeat bottom center; }
#footer { background: url("http://s0.wp.com/wp-content/themes/default/images/kubrickfooter.gif?m=1273203575g") no-repeat bottom; border: none;}
#header { margin: 0 !important; margin: 0 0 0 1px; padding: 1px; height: 198px; width: 758px; }
#headerimg { margin: 7px 9px 0; height: 192px; width: 740px; }
#headerimg h1 a, #headerimg h1 a:visited, #headerimg .description { color: #DDDDFF; }
#headerimg h1 a, #headerimg .description { display:  }

	--></style><meta name="application-name" content="Le Petit Chercheur Illustré" /><meta name="msapplication-window" content="width=device-width;height=device-height" /><meta name="msapplication-tooltip" content="Yet Another Signal Processing (and Applied Math) blog" /><meta name="msapplication-task" content="name=Subscribe;action-uri=http://yetaspblog.wordpress.com/feed/;icon-uri=http://s1.wp.com/i/favicon-stacked.ico" /><meta name="msapplication-task" content="name=Sign up for a free blog;action-uri=http://wordpress.com/signup/;icon-uri=http://s2.wp.com/i/favicon.ico" /><meta name="msapplication-task" content="name=WordPress.com Support;action-uri=http://support.wordpress.com/;icon-uri=http://s2.wp.com/i/favicon.ico" /><meta name="msapplication-task" content="name=WordPress.com Forums;action-uri=http://forums.wordpress.com/;icon-uri=http://s2.wp.com/i/favicon.ico" /></head>
<body>
<div id="page">


<div id="header">
	<div id="headerimg" onclick=" location.href='http://yetaspblog.wordpress.com';" style="cursor: pointer;">
		<h1><a href="http://yetaspblog.wordpress.com/">Le Petit Chercheur Illustré</a></h1>
		<div class="description">Yet Another Signal Processing (and Applied Math) blog</div>
	</div>
</div>
<hr />

	<div id="content" class="widecolumn">

	
		<div class="navigation">
			<div class="alignleft">&laquo; <a href="http://yetaspblog.wordpress.com/2010/05/18/new-class-of-rip-matrices/" rel="prev">New class of RIP matrices&nbsp;?</a></div>
			<div class="alignright"></div>
		</div>

		<div class="post-96 post type-post status-publish format-standard hentry category-compressed-sensing clear" id="post-96">
						<h2>Some comments on&nbsp;Noiselets</h2>
			<small>By jackdurden</small>

			<div class="entry">
				<p>Recently, a friend of mine asked me few questions about <em>Noiselets</em> for Compressed Sensing applications, i.e., in order to create efficient sensing matrices incoherent with signal which are sparse in the Haar/Daubechies wavelet basis. It seems that some of the answers are difficult to find on the web (but I&#8217;m sure they are well known to specialists) and I have therefore decided to share the ones I got.</p>
<div lang="x-western"><strong>Context:</strong></div>
<div lang="x-western">I wrote in 2008 a tiny Matlab toolbox (see <a href="http://www.tele.ucl.ac.be/~jacques/index.php/Main/Codes">here</a>) to convince  myself that the Noiselet followed a Cooley-Tukey implementation  already followed by the Walsh-Hadamard transform. It should have been optimized in C but I lacked of time to write this.Since this first code, I realized that <a href="http://users.ece.gatech.edu/justin/Justin_Romberg.html">Justin Romberg</a> wrote already in  2006 with Peter Stobbe a fast code (also O(N log N) but much faster than  mine) available here:<a href="http://users.ece.gatech.edu/%7Ejustin/spmag"></a><a href="http://users.ece.gatech.edu/%7Ejustin/spmag"> </a></div>
<div lang="x-western"><a href="http://users.ece.gatech.edu/%7Ejustin/spmag">http://users.ece.gatech.edu/~justin/spmag</a></div>
<div lang="x-western">
<p>People could be interested in using Justin&#8217;s code since, as it will be clarified from my answers given below, it is already adapted to real valued signals,  i.e., it produces real valued noiselets coefficients.</p>
</div>
<div lang="x-western"><strong>Q1. Do we need to use both the real and imaginary parts of noiselets to design sensing matrices (i.e., building the <img src='http://l.wordpress.com/latex.php?latex=%5CPhi&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\Phi' title='\Phi' class='latex' /> matrix)?  Can we use just the real part or just the imaginary part)?  Any reason why you&#8217;d do one thing or another?</strong></div>
<div lang="x-western"><strong><br />
</strong></div>
<div lang="x-western">As for the the <em><a href="http://www.math.ucla.edu/~tao/preprints/sparse.html">Random Fourier Ensemble</a> </em>sensing, what I personally do when I use noiselet  sensing is to pick uniformly at random <img src='http://l.wordpress.com/latex.php?latex=M%2F2&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='M/2' title='M/2' class='latex' /> complex values in half the  noiselet-frequency domain, and concatenate the real and the imaginary  part into a real vector of length <img src='http://l.wordpress.com/latex.php?latex=M%3D2%2AM%2F2&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='M=2*M/2' title='M=2*M/2' class='latex' />. The adjoint (transposed) operation &#8212; often needed in most of Compressed Sensing solvers &#8212; must of  course sum the previously split real and imaginary parts into <img src='http://l.wordpress.com/latex.php?latex=M%2F2&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='M/2' title='M/2' class='latex' /> complex values before to pad the complementary measured domain with zeros and run the inverse noiselet transform.</div>
<div lang="x-western">
<p>To understand the special treatment of the real and the imaginary parts (and not simply by considering it similar to what is done for Random Fourier Ensemble), let us consider the origin, that is, <a href="http://www.laurent-duval.eu/Documents-WITS-starlet/Noiselets/Coifman_R_2001_acha_n-noiselets.pdf">Coifman et  al. Noiselets paper</a>.</p>
<p>Recall that in this paper, two kinds of noiselets are defined. The first basis, the common Noiselets basis on the interval <img src='http://l.wordpress.com/latex.php?latex=%5B0%2C+1%5D&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='[0, 1]' title='[0, 1]' class='latex' />, is defined thanks to the recursive formulas:</p>
<p><a href="http://yetaspblog.files.wordpress.com/2010/08/screen-shot-2010-08-16-at-21-05-41.png"><img class="alignnone size-full wp-image-100" title="Screen shot 2010-08-16 at 21.05.41" src="http://yetaspblog.files.wordpress.com/2010/08/screen-shot-2010-08-16-at-21-05-41.png?w=450&#038;h=79" alt="" width="450" height="79" /></a></p>
<p>The second basis, or <em>Dragon Noiselets</em>, is slightly different. Its elements are symmetric under the change of coordinates <img src='http://l.wordpress.com/latex.php?latex=x+%5Cto+1-x&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='x \to 1-x' title='x \to 1-x' class='latex' />. Their recursive definition is</p>
<p><a href="http://yetaspblog.files.wordpress.com/2010/08/screen-shot-2010-08-16-at-21-09-10.png"><img class="alignnone size-full wp-image-101" title="Screen shot 2010-08-16 at 21.09.10" src="http://yetaspblog.files.wordpress.com/2010/08/screen-shot-2010-08-16-at-21-09-10.png?w=450&#038;h=79" alt="" width="450" height="79" /></a></p>
<p>To be more precise, the two sets</p>
<p style="text-align:center;"><img src='http://l.wordpress.com/latex.php?latex=%5C%7Bf_j%3A+2%5EN%5Cleq+j+%3C+2%5E%7BN%2B1%7D%5C%7D&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\{f_j: 2^N\leq j &lt; 2^{N+1}\}' title='\{f_j: 2^N\leq j &lt; 2^{N+1}\}' class='latex' />,</p>
<p style="text-align:center;"><img src='http://l.wordpress.com/latex.php?latex=%5C%7Bg_j%3A+2%5EN%5Cleq+j+%3C+2%5E%7BN%2B1%7D%5C%7D&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\{g_j: 2^N\leq j &lt; 2^{N+1}\}' title='\{g_j: 2^N\leq j &lt; 2^{N+1}\}' class='latex' />,</p>
<p>are orthonormal bases for piecewise constant functions at resolution <img src='http://l.wordpress.com/latex.php?latex=2%5EN&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='2^N' title='2^N' class='latex' />, that is, for functions of</p>
<p><img src='http://l.wordpress.com/latex.php?latex=V_N+%3D+%5C%7Bh%28x%29%3A+h%5C+%5Ctextrm%7Bis+constant+over+each%7D%5Cbig%5B2%5E%7B-N%7Dk%2C2%5E%7B-N%7D%28k%2B1%29%5Cbig%29%2C+0%5Cleq+k+%3C+2%5EN+%5C%7D.&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='V_N = \{h(x): h\ \textrm{is constant over each}\big[2^{-N}k,2^{-N}(k+1)\big), 0\leq k &lt; 2^N \}.' title='V_N = \{h(x): h\ \textrm{is constant over each}\big[2^{-N}k,2^{-N}(k+1)\big), 0\leq k &lt; 2^N \}.' class='latex' /></p>
<p>In Coifman et al. paper, the recursive definition of Eq. (2) (and also Eq (4) for  Dragon Noiselets), which connects the noiselet functions between the  noiselet index <img src='http://l.wordpress.com/latex.php?latex=n&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='n' title='n' class='latex' /> and indices <img src='http://l.wordpress.com/latex.php?latex=2n&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='2n' title='2n' class='latex' /> or <img src='http://l.wordpress.com/latex.php?latex=2n%2B1&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='2n+1' title='2n+1' class='latex' />, is simply a common <a href="http://en.wikipedia.org/wiki/Butterfly_diagram">butterfly  diagram</a> that sustains the <a href="http://en.wikipedia.org/wiki/Cooley%E2%80%93Tukey_FFT_algorithm">Cooley-Tukey</a> implementation of the Noiselet transform.</p>
<p>The coefficients involved in Eqs (2) and (4) are simply <img src='http://l.wordpress.com/latex.php?latex=1+%5Cpm+i&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='1 \pm i' title='1 \pm i' class='latex' />, which are of course complex conjugate of each other.</p>
<p>Therefore, in the Noiselet transform <img src='http://l.wordpress.com/latex.php?latex=%5Chat+X&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\hat X' title='\hat X' class='latex' /> of a real vector <img src='http://l.wordpress.com/latex.php?latex=X&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='X' title='X' class='latex' /> of length <img src='http://l.wordpress.com/latex.php?latex=2%5EN&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='2^N' title='2^N' class='latex' />  (in one to one correspondance with the piecewise constant functions of <img src='http://l.wordpress.com/latex.php?latex=V_N&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='V_N' title='V_N' class='latex' />) involving the noiselets of indices <img src='http://l.wordpress.com/latex.php?latex=n+%5Cin+%5C%7B2%5EN%2C+...%2C+2%5E%7BN%2B1%7D-1%5C%7D&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='n \in \{2^N, ..., 2^{N+1}-1\}' title='n \in \{2^N, ..., 2^{N+1}-1\}' class='latex' />, the resulting  decomposition diagram is fully symmetric (with a complex conjugation)  under a flip of indices <img src='http://l.wordpress.com/latex.php?latex=k+%5Cleftrightarrow+k%27+%3D+2%5EN+-+1+-+k&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='k \leftrightarrow k&#039; = 2^N - 1 - k' title='k \leftrightarrow k&#039; = 2^N - 1 - k' class='latex' />, for <img src='http://l.wordpress.com/latex.php?latex=k+%3D+0%2C%5C%2C+%5Ccdots%2C+2%5EN+-1&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='k = 0,\, \cdots, 2^N -1' title='k = 0,\, \cdots, 2^N -1' class='latex' />.</p>
<p>This shows that</p>
<p style="text-align:center;"><img src='http://l.wordpress.com/latex.php?latex=%5Chat+X_k+%3D+%5Chat+X%5E%2A_%7Bk%27%7D&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\hat X_k = \hat X^*_{k&#039;}' title='\hat X_k = \hat X^*_{k&#039;}' class='latex' />,</p>
<p>with <img src='http://l.wordpress.com/latex.php?latex=%7B%28%5Ccdot%29%7D%5E%2A&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='{(\cdot)}^*' title='{(\cdot)}^*' class='latex' /> the complex conjugation, if <img src='http://l.wordpress.com/latex.php?latex=X&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='X' title='X' class='latex' /> is real, and allows us to define  &#8220;Real Random Noiselet Ensemble&#8221; by picking uniformly at random <img src='http://l.wordpress.com/latex.php?latex=M%2F2&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='M/2' title='M/2' class='latex' />  complex values in the half domain <img src='http://l.wordpress.com/latex.php?latex=k+%3D+0%2C%5C%2C%5Ccdots%2C+2%5E%7BN-1%7D-1&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='k = 0,\,\cdots, 2^{N-1}-1' title='k = 0,\,\cdots, 2^{N-1}-1' class='latex' />, that is <img src='http://l.wordpress.com/latex.php?latex=M&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='M' title='M' class='latex' />  independent real values in total, as obtained by concatenating the real  and the imaginary parts (see above).</p>
<p>Therefore, for real valued signals, as for Fourier, the two halves of the noiselet spectrum are not independent, and therefore, only one half is necessary to perform useful CS measurements.</p>
<p>Justin&#8217;s code is close to this interpretation by using a  real valued version of the symmetric Dragon Noiselets described in the  initial Coifman et al. paper.</p>
<p><strong>Q2. Are noiselets always binary?  or do they take +1, -1, 0 values like Haar wavelets?</strong></p>
<p>Actually, a noiselet of index <img src='http://l.wordpress.com/latex.php?latex=j&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='j' title='j' class='latex' /> take the complex values <img src='http://l.wordpress.com/latex.php?latex=2%5E%7Bj%7D+%28%5Cpm+1+%5Cpm+i%29&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='2^{j} (\pm 1 \pm i)' title='2^{j} (\pm 1 \pm i)' class='latex' />, never <img src='http://l.wordpress.com/latex.php?latex=0&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='0' title='0' class='latex' />.This can be easily seen from the recursive formula of Eq. (2).</p>
<p>They fill  also the whole interval <img src='http://l.wordpress.com/latex.php?latex=%5B0%2C+1%5D&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='[0, 1]' title='[0, 1]' class='latex' />.</p>
<p><strong>Q3. Walsh functions have the property that they are binary and zero mean, so that one half of the values are 1 and the other half are -1.  Is it the same case with the real and/or imag parts of the noiselet transform?</strong></p>
<p>To be correct, Walsh-Hadamard functions have mean equal to 1 if their  index is a power of 2 and 0 else, starting with the [0,1] indicator  function of index 1.</p>
<p>For Noiselets, they are all of unit average, meaning that the imaginary  part has the zero average property. This can be proved easily (by induction) from their recursive definition in Coifman et  al. paper (Eqts (2) and (4)). Interestingly, their unit average, that is their projection on the unit constant function, shows directly that a constant function is not sparse at all in the  noiselet basis since its &#8220;noiselet spectrum&#8221; is just flat.</p>
<p>In fact, it is explained in Coifman paper that any Haar-Walsh wavelet  packets, that is, elementary functions of formula</p>
<p><img src='http://l.wordpress.com/latex.php?latex=W_n%282%5Eq+x+-+k%29&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='W_n(2^q x - k)' title='W_n(2^q x - k)' class='latex' /></p>
<p>with <img src='http://l.wordpress.com/latex.php?latex=W_n&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='W_n' title='W_n' class='latex' /> the <a href="http://en.wikipedia.org/wiki/Walsh_function">Walsh functions</a> (including the Haar functions), have a flat noiselet spectrum (all coefficients of unit amplitude), leading to the well known good  (in)coherence results (that is, low coherence). To recall, the coherence is given by <img src='http://l.wordpress.com/latex.php?latex=1&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='1' title='1' class='latex' /> for the Haar wvaelet basis, and it corresponds to slightly higher values for the Daubechies wavelets D4 and D8 respectively (see, e.g., E.J. Candès and M.B. Wakin, <a href="http://dsp.rice.edu/files/cs/CSintro.pdf">&#8220;An introduction to compressive sampling&#8221;</a>, IEEE Sig. Proc. Mag., 25(2):21–30, 2008.)</p>
<p><strong>Q4. How come noiselets require O(N logN) computations rather than O(N) like the haar transform?</strong></p>
<p>This is a verrry common confusion. The difference comes from the locality of the Haar basis  elements.</p>
<p>For the Haar transform, you can use the well known pyramidal algorithm running in <img src='http://l.wordpress.com/latex.php?latex=O%28N%29&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='O(N)' title='O(N)' class='latex' />  computations. You start from the approximation coefficients  computed at the finest scale, using then the wavelet scaling relations to compute the detail and approximation coefficients at the second scale, and so on. Because of the sub-sampling occuring at each scale, the complexity is proportional to the number of coefficients, that is, it is <img src='http://l.wordpress.com/latex.php?latex=O%28N%29&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='O(N)' title='O(N)' class='latex' />.</p>
<p>For the 3 bases Hadamard-Walsh, Noiselets and Fourier, their  non-locality (i.e., their support is the whole segment [0, 1]) you  cannot run a similar alorithm. However, you can use the Cooley-Tukey algorithm arising from the  Butterfly diagrams linked to the corresponding recursive definitions (Eqs (2) and (4) above).</p>
<p>This one is in <img src='http://l.wordpress.com/latex.php?latex=O%28N+log+N%29&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='O(N log N)' title='O(N log N)' class='latex' />, since the final diagram has <img src='http://l.wordpress.com/latex.php?latex=%5Clog_2+N&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\log_2 N' title='\log_2 N' class='latex' /> levels,  each involving <img src='http://l.wordpress.com/latex.php?latex=N&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='N' title='N' class='latex' /> multiplication-additions.</p>
<p>&#8212;</p>
<p>Feel free to comment this post and ask other questions. It will provide perhaps eventually a general Noiselet FAQ/HOWTO <img src='http://s1.wp.com/wp-includes/images/smilies/icon_wink.gif?m=1221157769g' alt=';-)' class='wp-smiley' /> </p>
</div>

								
				<p class="postmetadata alt">
					<small>
												This entry was posted  on August 21, 2010 at 12:05 am and is filed under <a href="http://en.wordpress.com/tag/compressed-sensing/" title="View all posts in Compressed Sensing" rel="category tag">Compressed Sensing</a>.						You can follow any responses to this entry through the <a href='http://yetaspblog.wordpress.com/2010/08/21/some-comments-on-noiselets/feed/'>RSS 2.0</a> feed.
													You can <a href="#respond">leave a response</a>, or <a href="http://yetaspblog.wordpress.com/2010/08/21/some-comments-on-noiselets/trackback/" rel="trackback">trackback</a> from your own site.
						
					</small>
				</p>

			</div>
					</div>

	<div id="wpl-likebox"><div id="wpl-button"><a href='http://yetaspblog.wordpress.com/2010/08/21/some-comments-on-noiselets/?like=1&amp;_wpnonce=251343adf9' title='I like this post' class='like needs-login'><span>Like</span></a></div><div id="wpl-count">Be the first to like this post.</div></div>
<!-- You can start editing here. -->
	<h3 id="comments">5 Responses to &#8220;Some comments on&nbsp;Noiselets&#8221;</h3>

	<ol class="commentlist">
					<li class="comment even thread-even depth-1" id="comment-78">
						<cite>Gabriel Peyré</cite> Says:						<br />

			<small class="commentmetadata"><a href="#comment-78" title="">August 22, 2010 at 11:50 pm</a> | <a class='comment-reply-link' href='/2010/08/21/some-comments-on-noiselets/?replytocom=78#respond' onclick='return addComment.moveForm("comment-78", "78", "respond", "96")'>Reply</a> </small>

			<p>In my CS experiments, I use a doubly scrambled Hadamard transform, which means,</p>
<p> y = x(randperm(n));<br />
 y = hadamard(y)); % N*log(N) operations, you can use dct or any flat ortho basis<br />
 y = y(randperm(n));<br />
 y = y(1:p); % select only p random coefficients</p>
<p>What is the advantage of Noiselets over this scheme ? I suspect they work similarely on data sparse in wavelets.</p>
</li>
			<li class="comment byuser comment-author-jackdurden bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-79">
			<img alt='' src='http://1.gravatar.com/avatar/bca0a7cda97b9faabef157054852de42?s=32&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D32' class='avatar avatar-32' height='32' width='32' />			<cite>jackdurden</cite> Says:						<br />

			<small class="commentmetadata"><a href="#comment-79" title="">August 23, 2010 at 2:24 pm</a> | <a class='comment-reply-link' href='/2010/08/21/some-comments-on-noiselets/?replytocom=79#respond' onclick='return addComment.moveForm("comment-79", "79", "respond", "96")'>Reply</a> </small>

			<p>Good to know. This scheme is possibly very efficient too. And another variant would be to use a spreadspectrum (i.e. pointwise multiplication by Bernoulli vector before hadamard/noiselet/fourier) instead of the first randperm.  </p>
<p>However, the question is how to prove that Hadamard functions + randperms provides a flat spectrum for function sparse in the Haar basis. Perhaps this can be proved, but I never read such a proof up to now. For noiselets, the proof is in Coifman et al. Noiselets paper.</p>
</li>
			<li class="comment even thread-even depth-1" id="comment-80">
						<cite>Gabriel Peyré</cite> Says:						<br />

			<small class="commentmetadata"><a href="#comment-80" title="">August 24, 2010 at 11:05 am</a> | <a class='comment-reply-link' href='/2010/08/21/some-comments-on-noiselets/?replytocom=80#respond' onclick='return addComment.moveForm("comment-80", "80", "respond", "96")'>Reply</a> </small>

			<p>Regarding theory I agree that one should use noiselets. It should be doable to do the math for randomization (or spreadspectrum) and then partial hadamard.</p>
</li>
			<li class="comment byuser comment-author-jackdurden bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-81">
			<img alt='' src='http://1.gravatar.com/avatar/bca0a7cda97b9faabef157054852de42?s=32&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D32' class='avatar avatar-32' height='32' width='32' />			<cite>jackdurden</cite> Says:						<br />

			<small class="commentmetadata"><a href="#comment-81" title="">August 27, 2010 at 1:49 pm</a> | <a class='comment-reply-link' href='/2010/08/21/some-comments-on-noiselets/?replytocom=81#respond' onclick='return addComment.moveForm("comment-81", "81", "respond", "96")'>Reply</a> </small>

			<p>It could be doable indeed. I feel more confortable with SS than with randperm nevertheless. But I saw some concentration results on random permutations recently on arxiv that could help.</p>
</li>
			<li class="comment even thread-even depth-1" id="comment-87">
			<img alt='' src='http://1.gravatar.com/avatar/b694909bcdf72ef51eabd049de7cd582?s=32&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D32' class='avatar avatar-32' height='32' width='32' />			<cite><a href='http://controlsystem-lab.blogspot.com' rel='external nofollow' class='url'>itsrsu</a></cite> Says:						<br />

			<small class="commentmetadata"><a href="#comment-87" title="">November 6, 2010 at 6:52 pm</a> | <a class='comment-reply-link' href='/2010/08/21/some-comments-on-noiselets/?replytocom=87#respond' onclick='return addComment.moveForm("comment-87", "87", "respond", "96")'>Reply</a> </small>

			<p><a href="http://signals-system.blogspot.com" rel="nofollow"> Continuous Signal and Linear System </a></p>
</li>
	
	</ol>

	<div class="navigation">
		<div class="alignleft"></div>
		<div class="alignright"></div>
	</div>

 


								<div id="respond">
				<h3 id="reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/2010/08/21/some-comments-on-noiselets/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://yetaspblog.wordpress.com/wp-comments-post.php" method="post" id="commentform">
																			<p class="comment-notes">Your email address will not be published.</p>							<p class="comment-form-author"><label for="author">Name</label> <input id="author" name="author" type="text" value="" size="30" /></p>
<p class="comment-form-email"><label for="email">Email</label> <input id="email" name="email" type="text" value="" size="30" /></p>
<p class="comment-form-url"><label for="url">Website</label><input id="url" name="url" type="text" value="" size="30" /></p>
												<p class="comment-form-comment"><label for="comment">Comment</label><textarea id="comment" name="comment" cols="45" rows="8" aria-required="true"></textarea></p>						<p class="form-allowed-tags">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes:  <code>&lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;pre&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </code></p>						<p class="form-submit">
							<input name="submit" type="submit" id="submit" value="Post Comment" />
							<input type='hidden' name='comment_post_ID' value='96' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
						</p>
						
<input type="hidden" name="genseq" value="1293722738" />
<p><input type="checkbox" name="subscribe" id="subscribe" value="subscribe" style="width: auto;" tabindex="6"/> <label class="subscribe-label" id="subscribe-label" for="subscribe">Notify me of follow-up comments via email.</label></p><p><input type="checkbox" name="subscribe_blog" id="subscribe_blog" value="subscribe" style="width: auto;" tabindex="7"/> <label class="subscribe-label" id="subscribe-blog-label" for="subscribe_blog">Notify me of new posts via email.</label></p><input type="hidden" name="sub-type" value="comment-form-text0" /><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="2f8db14a79" /></p>					</form>
							</div><!-- #respond -->
						

	
	</div>


<hr />
<div id="footer">
	<p>
		Theme: <a href="http://theme.wordpress.com/themes/default/">Kubrick</a>. <a href="http://wordpress.com/?ref=footer" rel="generator">Blog at WordPress.com</a>.
		<br /><a href="http://yetaspblog.wordpress.com/feed/">Entries (RSS)</a> and <a href="http://yetaspblog.wordpress.com/comments/feed/">Comments (RSS)</a>.	</p>
</div>
</div>

<script type="text/javascript">
// <![CDATA[
(function() {
try{
  if ( window.external &&'msIsSiteMode' in window.external) {
    if (window.external.msIsSiteMode()) {
      var jl = document.createElement('script');
      jl.type='text/javascript';
      jl.async=true;
      jl.src='/wp-content/plugins/ie-sitemode/custom-jumplist.php';
      var s = document.getElementsByTagName('script')[0];
      s.parentNode.insertBefore(jl, s);
    }
  }
}catch(e){}
})();
// ]]>
</script>	<script type="text/javascript">
	/* <![CDATA[ */
		jQuery( function() {
			
			jQuery('#wpl-button > a.like').click( function(e) {
				e.preventDefault();
				
				jQuery('#wpl-mustlogin').remove();

				jQuery.post( 'http://yetaspblog.wordpress.com/wp-admin/admin-ajax.php', { 
					'action': 'wpl_record_stat',
					'stat_name': 'loggedout_like_click'
				} );

				var tenMins = new Date();
				tenMins.setTime( tenMins.getTime() + 600000 );
				document.cookie = 'wpl_rand=247c3c8466; expires=' + tenMins.toGMTString() + '; domain=wordpress.com; path=/;';
				
				jQuery('#wpl-count').after( '\
					<div id="wpl-mustlogin"> \
						<form action="http://yetaspblog.wordpress.com/wp-login.php" method="post"> \
							<p>Just one more step to like this post:</p> \
							<label><span>Username</span> <input type="text" name="log" id="user_login" class="input" value="" size="20" tabindex="80" /></label> \
							<label><span>Password</span> <input type="password" name="pwd" id="user_pass" class="input" value="" size="20" tabindex="81" /></label> \
							<input type="submit" name="wp-submit" id="wp-submit" class="button-primary" value="Log In" tabindex="82" /> \
							<input type="hidden" name="redirect_to" value="http://yetaspblog.wordpress.com/2010/08/21/some-comments-on-noiselets/?like=1" /> \
							<input type="hidden" name="wpl_rand" value="247c3c8466" /> \
							<p>Not a member yet? <a href="http://wordpress.com/signup/?ref=likebox" id="wpl-signup-link">Sign up with WordPress.com</a></p> \
						</form> \
					</div> \
				');
				
				jQuery('#wpl-mustlogin').hide().slideDown('fast');
			} );
			
			jQuery('#wpl-mustlogin input.input').live( 'focus', function() {
				jQuery(this).prev().hide();
			}).live( 'blur', function() {
				if ( jQuery(this).val() == '' )
					jQuery(this).prev().show();
			});
			
			jQuery('#wpl-mustlogin input#wp-submit').live( 'click', function(e) {
				e.preventDefault();
				
				jQuery.post( 'http://yetaspblog.wordpress.com/wp-admin/admin-ajax.php', { 
					'action': 'wpl_record_stat',
					'stat_name': 'loggedout_login_submit'
				}, function() {
					jQuery('#wpl-mustlogin form').submit();
				} );
			});			
			
			jQuery('#wpl-mustlogin a#wpl-signup-link').live( 'click', function(e) {
				e.preventDefault();
				
				var link = jQuery(this).attr('href');
				
				jQuery.post( 'http://yetaspblog.wordpress.com/wp-admin/admin-ajax.php', { 
					'action': 'wpl_record_stat',
					'stat_name': 'loggedout_signup_click'
				}, function() {
					location.href = link;
				} );
			});					
			
		});
	/* ]]> */
	</script>
<script type="text/javascript">_qoptions={qacct:'p-18-mFEk4J448M',labels:'language.en,type.wpcom'};</script>
<script type="text/javascript" src="http://edge.quantserve.com/quant.js"></script>
<noscript><p><img class="robots-nocontent" src="http://pixel.quantserve.com/pixel/p-18-mFEk4J448M.gif?labels=language.en%2Ctype.wpcom" style="display:none" height="1" width="1" alt="" /></p></noscript>
<script type='text/javascript' src='http://s.gravatar.com/js/gprofiles.js?o&#038;ver=MU'></script>
	<script type="text/javascript">	
	// <![CDATA[
	WPGroHo = {
		data: {},
		renderers: {},
		syncProfileData: function( hash, id ) {
			if ( !WPGroHo.data[hash] ) {
				WPGroHo.data[hash] = {};
				a = jQuery( 'div.grofile-hash-map-' + hash + ' span' ).each( function() {
					WPGroHo.data[hash][this.className] = jQuery( this ).text();
				} );
			}

			WPGroHo.appendProfileData( WPGroHo.data[hash], hash, id );
		},
		appendProfileData: function( data, hash, id ) {
			for ( var key in data ) {
				if ( jQuery.isFunction( WPGroHo.renderers[key] ) ) {
					return WPGroHo.renderers[key]( data[key], hash, id, key );
				}

				jQuery( '#' + id ).find( 'h4' ).after( jQuery( '<p class="grav-extra ' + key + '" />' ).html( data[key] ) );
			}
		}
	};
	jQuery(document).ready(function($){
		Gravatar.profile_cb = function( h, d ) {
			WPGroHo.syncProfileData( h, d );
		};
		Gravatar.attach_profiles();
	});
	// ]]>
	</script>
	<div style="display:none">
	<div class="grofile-hash-map-bca0a7cda97b9faabef157054852de42">
	</div>
	<div class="grofile-hash-map-b694909bcdf72ef51eabd049de7cd582">
	</div>
	</div>
<script type="text/javascript" src="http://b.scorecardresearch.com/beacon.js"></script><script type="text/javascript">try{COMSCORE.beacon({c1:2,c2:7518284});}catch(e){}</script><noscript><p class="robots-nocontent"><img src="http://b.scorecardresearch.com/p?cj=1c1=2&#038;c2=7518284" alt="" style="display:none" width="1" height="1" /></p></noscript><script src="http://s.stats.wordpress.com/w.js?19" type="text/javascript"></script>
<script type="text/javascript">
st_go({'blog':'3694518','v':'wpcom','user_id':'0','post':'96','subd':'yetaspblog'});
ex_go({'crypt':'RDZ8LFkxbXF5fD9hdXZVS01aKy1yNWFmX2xwan4sYzd+YWMvOWlMWnVtaiY1RHBDeENuX3hUWy0sZm8zdndvRVJNPTA0LXc4ckRLZltFV08/OHM2S1RIPXFHaVtWT1QuSz9FSmVzOD09UUFJU2FLJTg0fjgyS11ER096PSVOJlR1ejJ8VGFOZlpCSmZ3UmVNfEkuaXdESlhvbjVVeEc0ajNKdThSemk1dDF8QUxOajZpd2VEX3lJeTAyW0RXZEJmdD9zYlVIZ1I0'});
addLoadEvent(function(){linktracker_init('3694518',96);});
	</script>
</body>
</html>